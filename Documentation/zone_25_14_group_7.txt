-- ##########################################################
-- #               GROUP 7: DONATIONS & REWARDS            #
-- #  Manages user donations, rewards, badges, and titles #
-- ##########################################################

-- Donations Table (Tracks User Contributions)
CREATE TABLE donations (
    donation_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    amount DECIMAL(10,2) NOT NULL CHECK (amount > 0),
    currency_code VARCHAR(3) REFERENCES currencies(currency_code) DEFAULT 'USD',
    message TEXT NULL,
    donated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Donation Goals Table (For Crowdfunding-Like Events)
CREATE TABLE donation_goals (
    goal_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    goal_name VARCHAR(255) NOT NULL,
    target_amount DECIMAL(10,2) NOT NULL CHECK (target_amount > 0),
    current_amount DECIMAL(10,2) DEFAULT 0 CHECK (current_amount >= 0),
    deadline TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Reward Tiers Table (For Special Perks Based on Contributions)
CREATE TABLE reward_tiers (
    tier_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    tier_name VARCHAR(100) NOT NULL,
    min_donation DECIMAL(10,2) NOT NULL CHECK (min_donation > 0),
    benefits JSONB DEFAULT '{}' -- Example: { "exclusive_badge": true, "vip_support": true }
);

-- User Rewards Table (Tracks User Rewards from Donations)
CREATE TABLE user_rewards (
    reward_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    tier_id UUID REFERENCES reward_tiers(tier_id) ON DELETE CASCADE,
    granted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- User Points System (Loyalty Points for Engagement)
CREATE TABLE user_points (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    points INTEGER NOT NULL CHECK (points >= 0),
    earned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Badges Table (Special Achievements & Recognition)
CREATE TABLE badges (
    badge_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    badge_name VARCHAR(100) UNIQUE NOT NULL,
    description TEXT NOT NULL
);

-- User Badges Table (Tracks Earned Badges)
CREATE TABLE user_badges (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    badge_id UUID REFERENCES badges(badge_id) ON DELETE CASCADE,
    earned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Titles Table (Special User Titles Based on Achievements)
CREATE TABLE titles (
    title_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    title_name VARCHAR(100) UNIQUE NOT NULL,
    description TEXT NOT NULL
);

-- User Titles Table (Tracks Earned Titles)
CREATE TABLE user_titles (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    title_id UUID REFERENCES titles(title_id) ON DELETE CASCADE,
    earned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- User Display Preferences (Shows Preferred Title/Badge)
CREATE TABLE user_display_preferences (
    user_id UUID PRIMARY KEY REFERENCES users(user_id) ON DELETE CASCADE,
    selected_title_id UUID REFERENCES titles(title_id) ON DELETE SET NULL,
    selected_badge_id UUID REFERENCES badges(badge_id) ON DELETE SET NULL
);
