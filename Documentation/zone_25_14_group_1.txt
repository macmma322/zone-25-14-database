-- ##########################################################
-- #                  GROUP 1: USER MANAGEMENT             #
-- #  Manages user authentication, profiles, roles,       #
-- #  security settings, and linked accounts.             #
-- ##########################################################

-- Enable necessary PostgreSQL extensions
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- ENUM for User Roles
CREATE TYPE user_role AS ENUM ('Explorer', 'Supporter', 'Elite Member', 'Legend', 'Ultimate', 
                               'Moderator', 'Store Chief', 'Hype Lead', 'Founder');

-- User Roles Table
CREATE TABLE user_roles_levels (
    role_level_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    role_name user_role UNIQUE NOT NULL,
    required_points INTEGER DEFAULT 0 CHECK (required_points >= 0),
    discount_percentage DECIMAL(5,2) DEFAULT 0.00 CHECK (discount_percentage BETWEEN 0 AND 100),
    is_staff BOOLEAN DEFAULT FALSE,
    permissions JSONB DEFAULT '{}' -- Stores detailed role permissions
);

-- Users Table
CREATE TABLE users (
    user_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    username VARCHAR(50) UNIQUE NOT NULL,
    password TEXT NOT NULL, -- Assume bcrypt-hashed
    email TEXT UNIQUE NOT NULL, -- Will be stored encrypted
    phone TEXT NULL, -- Will be stored encrypted
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    biography TEXT,
    profile_picture TEXT,
    role_level_id UUID REFERENCES user_roles_levels(role_level_id) DEFAULT 
        (SELECT role_level_id FROM user_roles_levels WHERE role_name = 'Explorer'),
    store_credit DECIMAL(10,2) DEFAULT 0 CHECK (store_credit >= 0),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Linked Accounts (OAuth Logins)
CREATE TABLE linked_accounts (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    platform VARCHAR(50) NOT NULL,
    username VARCHAR(255) NOT NULL,
    profile_url TEXT NOT NULL,
    access_token TEXT NULL,
    refresh_token TEXT NULL,
    linked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Saved Cards (Encrypted Storage for Payment Info)
CREATE TABLE saved_cards (
    card_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    encrypted_card_number TEXT NOT NULL,
    encrypted_expiry_date TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Privacy Settings (User Control over Visibility & Interaction)
CREATE TABLE privacy_settings (
    user_id UUID PRIMARY KEY REFERENCES users(user_id) ON DELETE CASCADE,
    allow_friend_requests BOOLEAN DEFAULT TRUE,
    allow_messages BOOLEAN DEFAULT TRUE,
    profile_visibility VARCHAR(20) CHECK (profile_visibility IN ('public', 'private', 'friends-only')),
    show_wishlist BOOLEAN DEFAULT TRUE,
    show_recent_purchases BOOLEAN DEFAULT TRUE,
    appear_offline BOOLEAN DEFAULT FALSE
);

-- User Preferences (Custom Settings for User Experience)
CREATE TABLE user_preferences (
    user_id UUID PRIMARY KEY REFERENCES users(user_id) ON DELETE CASCADE,
    theme_mode VARCHAR(20) CHECK (theme_mode IN ('light', 'dark', 'system')) DEFAULT 'system',
    language VARCHAR(10) DEFAULT 'en',
    preferred_currency VARCHAR(3) REFERENCES currencies(currency_code) DEFAULT 'USD',
    email_notifications BOOLEAN DEFAULT TRUE
);


-- Notification Settings
CREATE TABLE notification_settings (
    user_id UUID PRIMARY KEY REFERENCES users(user_id) ON DELETE CASCADE,
    notify_on_new_message BOOLEAN DEFAULT TRUE,
    notify_on_friend_request BOOLEAN DEFAULT TRUE,
    notify_on_announcement BOOLEAN DEFAULT TRUE
);

-- IP Usage Tracking (Prevents Multi-Account Abuse)
CREATE TABLE ip_usage (
    ip_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    ip_address VARCHAR(45) NOT NULL, -- Only logs the raw IP
    detected_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Failed Login Tracking (Prevents Brute Force Attacks)
CREATE TABLE failed_logins (
    fail_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE, -- The targeted user
    ip_address VARCHAR(45) NOT NULL, -- IP of the failed attempt
    attempt_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- When the failed attempt happened
    reason TEXT NOT NULL CHECK (reason IN ('wrong_password', 'account_locked', 'suspicious_activity'))
);

-- Device Tracking (Prevents Account Sharing & Unauthorized Access)
CREATE TABLE user_devices (
    device_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    device_fingerprint TEXT NOT NULL, -- Unique device identifier
    country VARCHAR(100) NOT NULL,
    city VARCHAR(100) NOT NULL,
    detected_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
