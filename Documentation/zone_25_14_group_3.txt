-- ##########################################################
-- #               GROUP 3: E-COMMERCE SYSTEM              #
-- #  Manages brands, products, categories, carts, orders #
-- #  & gift purchases.                                   #
-- ##########################################################

-- Brands Table
CREATE TABLE brands (
    brand_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    brand_name VARCHAR(100) UNIQUE NOT NULL,
    description TEXT
);

-- Categories Table
CREATE TABLE categories (
    category_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(100) NOT NULL,
    parent_category_id UUID REFERENCES categories(category_id) NULL,
    path TEXT
);

-- Category-Product Relationship (Many-to-Many)
CREATE TABLE category_product (
    category_id UUID REFERENCES categories(category_id) ON DELETE CASCADE,
    product_id UUID REFERENCES products(product_id) ON DELETE CASCADE,
    PRIMARY KEY (category_id, product_id)
);

-- Products Table
CREATE TABLE products (
    product_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    brand_id UUID REFERENCES brands(brand_id) ON DELETE SET NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    base_price DECIMAL(10,2) NOT NULL CHECK (base_price > 0),
    currency_code VARCHAR(3) REFERENCES currencies(currency_code),
    is_exclusive BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Product Variations Table (For Size, Color, etc.)
CREATE TABLE product_variations (
    variation_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    product_id UUID REFERENCES products(product_id) ON DELETE CASCADE,
    size VARCHAR(50) NULL,
    color VARCHAR(50) NULL,
    special_edition VARCHAR(100) NULL,
    stock_quantity INTEGER NOT NULL DEFAULT 0 CHECK (stock_quantity >= 0),
    additional_price DECIMAL(10,2) DEFAULT 0 CHECK (additional_price >= 0)
);

-- Shopping Cart Table
CREATE TABLE shopping_cart (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    product_variation_id UUID REFERENCES product_variations(variation_id) ON DELETE CASCADE,
    quantity INTEGER NOT NULL CHECK (quantity > 0),
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Wishlist Table (Users Can Save Items for Later)
CREATE TABLE wishlist (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    product_id UUID REFERENCES products(product_id) ON DELETE CASCADE,
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Gift Orders Table (Users Can Buy Gifts for Others)
CREATE TABLE gift_orders (
    gift_order_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    sender_id UUID REFERENCES users(user_id) ON DELETE CASCADE,
    recipient_email TEXT NOT NULL,
    recipient_name VARCHAR(100) NOT NULL,
    total_price DECIMAL(10,2) NOT NULL CHECK (total_price > 0),
    payment_status payment_status DEFAULT 'pending',
    message TEXT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Gift Order Items Table (Tracks Items in Gift Orders)
CREATE TABLE gift_order_items (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    gift_order_id UUID REFERENCES gift_orders(gift_order_id) ON DELETE CASCADE,
    product_variation_id UUID REFERENCES product_variations(variation_id) ON DELETE CASCADE,
    quantity INTEGER NOT NULL CHECK (quantity > 0)
);

-- Gift Cards Table
CREATE TABLE gift_cards (
    gift_card_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    code VARCHAR(50) UNIQUE NOT NULL,
    sender_id UUID REFERENCES users(user_id),
    receiver_id UUID REFERENCES users(user_id) NULL,
    amount DECIMAL(10,2) NOT NULL CHECK (amount > 0),
    is_redeemed BOOLEAN DEFAULT FALSE,
    issued_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    redeemed_at TIMESTAMP NULL
);

-- Inventory Management (Stock & Tracking)
CREATE TABLE inventory (
    inventory_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    product_variation_id UUID REFERENCES product_variations(variation_id) ON DELETE CASCADE,
    stock_quantity INTEGER NOT NULL CHECK (stock_quantity >= 0),
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Stock Levels (Tracks Stock Adjustments)
CREATE TABLE stock_levels (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    product_variation_id UUID REFERENCES product_variations(variation_id) ON DELETE CASCADE,
    change_quantity INTEGER NOT NULL,
    reason TEXT NOT NULL,
    changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE product_translations (
    translation_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    product_id UUID REFERENCES products(product_id) ON DELETE CASCADE,
    language VARCHAR(10) NOT NULL, -- e.g., 'en', 'es', 'fr'
    translated_name VARCHAR(255) NOT NULL,
    translated_description TEXT NOT NULL
);

CREATE TABLE category_translations (
    translation_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    category_id UUID REFERENCES categories(category_id) ON DELETE CASCADE,
    language VARCHAR(10) NOT NULL,
    translated_name VARCHAR(255) NOT NULL
);
